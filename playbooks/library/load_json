#!/usr/bin/env python
import json
import os

def sanitize_path(path):
    path = os.path.expandvars(path)
    path = os.path.expanduser(path)
    path = os.path.abspath(path)
    return path

def main():
    rand_str = "AoCFb2Da5hMmmvemkMmS" 
    module = AnsibleModule(
        argument_spec = dict(
            definition      = dict(required=True),
            object_type     = dict(required=True),
            var             = dict(required=False),
            val             = dict(required=False)
        )
    )
    definition      = module.params.get('definition')
    object_type     = module.params.get('object_type')
    val             = module.params.get('val', rand_str)
    var             = module.params.get('var', rand_str)

    if definition in ["False", "false"]:
        obj_dict = dict()
        obj_dict[object_type] = obj_list
        module.exit_json(changed=False, ansible_facts=obj_dict)

    definition = sanitize_path(definition)
    if not os.path.isfile(definition):
    	module.fail_json(changed=False, msg="{0} does not exist!".format(definition))

    try:
        with open(definition, 'r') as d_file:
            data = json.loads(d_file.read())
    except:
        data = dict()

    if (var and var is not rand_str) and (val and val is not rand_str):
        try:
            data[var] = json.loads(val)
        except:
            data[var] = val
        with open(definition, 'w') as d_file:
            d_file.write(json.dumps(data, separators=(',', ':'), indent=4, sort_keys=True))

    obj_dict = dict()
    obj_dict[object_type] = data
    module.exit_json(changed=True, ansible_facts=obj_dict)



from ansible.module_utils.basic import AnsibleModule
if __name__ == '__main__':
    main()