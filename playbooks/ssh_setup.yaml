---
- hosts: tag_Role_NetworkHosts
  gather_facts: no
  tasks:

    - name: setup ssh backend
      shell: vault secrets enable -path=ssh-{{ machine_role }} ssh
      ignore_errors: true
      delegate_to: localhost
      environment:
         VAULT_TOKEN: "{{ vault_token }}"
         VAULT_ADDR: "{{ vault_addr }}"

    - name: set generate_signing_key=True
      shell: vault write ssh-{{ machine_role }}/config/ca generate_signing_key=true
      ignore_errors: true
      delegate_to: localhost
      environment:
         VAULT_TOKEN: "{{ vault_token }}"
         VAULT_ADDR: "{{ vault_addr }}"



#    - name: get public key
#      vault_secret: path=ssh-{{ machine_role }}/config/ca vault_addr={{ vault_addr }} vault_token={{ vault_token }}
#      register: public_key
#      delegate_to: localhost

#    - name: dump public_key
#      debug: msg="{{ public_key.vault_secrets.public_key | trim  }}"
#      delegate_to: localhost
    
#    - name: Set Public Key
#      set_fact: public_ssh_key="{{ public_key.vault_secrets.public_key | trim }}"
#      delegate_to: localhost

#    - name: create /etc/ssh/trusted-user-ca-keys.pem
#      file: path=/etc/ssh/trusted-user-ca-keys.pem state=touch owner=root group=root
#      become: yes

#    - name: setup public key
#      copy: dest=/etc/ssh/trusted-user-ca-keys.pem content="{{ public_ssh_key }}"
#      become: yes

#    - name: setup Trusted CA Keys
#      become: yes
#      lineinfile: 
#        path: /etc/ssh/sshd_config
#        regexp: '^TrustedUserCAKeys'
#        line: 'TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem'

#    - name: setup Trusted CA Keys
#      become: yes
#      lineinfile: 
#        path: /etc/ssh/sshd_config
#        line: 'TrustedUserCAKeys /etc/ssh/trusted-user-ca-keys.pem'

#    - name: restart sshd
#      service: name=sshd state=restarted
#      become: yes